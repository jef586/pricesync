{
    "info":  {
                 "_postman_id":  "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
                 "name":  "PryceSync ERP API",
                 "description":  "ColecciÃ³n completa para probar la API del sistema ERP PryceSync\n\n## ConfiguraciÃ³n Inicial\n1. Ejecutar **Health Check** para verificar que la API estÃ© funcionando\n2. Ejecutar **Register User** para crear un usuario de prueba\n3. Ejecutar **Login** para obtener el token de autenticaciÃ³n\n4. El token se guardarÃ¡ automÃ¡ticamente en las variables de entorno\n\n## Variables de Entorno\n- `base_url`: http://localhost:3002\n- `auth_token`: Se establece automÃ¡ticamente despuÃ©s del login\n\n## Datos de Prueba\n- **Empresa**: Empresa Test S.A. (ya creada)\n- **Usuario**: admin@empresatest.com / admin123\n- **Tax ID**: 20-12345678-9",
                 "schema":  "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
             },
    "item":  [
                 {
                     "name":  "ðŸ¥ Health \u0026 Status",
                     "item":  [
                                  {
                                      "name":  "Health Check",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.test(\"Status code is 200\", function () {",
                                                                                    "    pm.response.to.have.status(200);",
                                                                                    "});",
                                                                                    "",
                                                                                    "pm.test(\"Response has status ok\", function () {",
                                                                                    "    var jsonData = pm.response.json();",
                                                                                    "    pm.expect(jsonData.status).to.eql(\"ok\");",
                                                                                    "});",
                                                                                    "",
                                                                                    "pm.test(\"Database is connected\", function () {",
                                                                                    "    var jsonData = pm.response.json();",
                                                                                    "    pm.expect(jsonData.database).to.eql(\"connected\");",
                                                                                    "});"
                                                                                ],
                                                                       "type":  "text/javascript"
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{base_url}}/api/health",
                                                                  "host":  [
                                                                               "{{base_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "api",
                                                                               "health"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  }
                              ]
                 },
                 {
                     "name":  "ðŸ” Authentication",
                     "item":  [
                                  {
                                      "name":  "Register User",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.test(\"Status code is 201\", function () {",
                                                                                    "    pm.response.to.have.status(201);",
                                                                                    "});",
                                                                                    "",
                                                                                    "pm.test(\"Response has user data\", function () {",
                                                                                    "    var jsonData = pm.response.json();",
                                                                                    "    pm.expect(jsonData).to.have.property(\u0027user\u0027);",
                                                                                    "    pm.expect(jsonData).to.have.property(\u0027token\u0027);",
                                                                                    "});",
                                                                                    "",
                                                                                    "// Guardar el token automÃ¡ticamente",
                                                                                    "if (pm.response.code === 201) {",
                                                                                    "    var jsonData = pm.response.json();",
                                                                                    "    pm.environment.set(\"auth_token\", (jsonData.data && jsonData.data.tokens ? jsonData.data.tokens.accessToken : \"\"));",
                                                                                    "}"
                                                                                ],
                                                                       "type":  "text/javascript"
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [
                                                                     {
                                                                         "key":  "Content-Type",
                                                                         "value":  "application/json"
                                                                     }
                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{\n  \"email\": \"admin@empresatest.com\",\n  \"password\": \"admin123\",\n  \"name\": \"Admin Test\",\n  \"role\": \"admin\",\n  \"companyId\": \"cmfzbx1ff0000521dfh4ynxm1\"\n}"
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{base_url}}/api/auth/register",
                                                                  "host":  [
                                                                               "{{base_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "api",
                                                                               "auth",
                                                                               "register"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "Login",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.test(\"Status code is 200\", function () {",
                                                                                    "    pm.response.to.have.status(200);",
                                                                                    "});",
                                                                                    "",
                                                                                    "var jsonData = pm.response.json();",
                                                                                    "var data = (jsonData && jsonData.data) || {};",
                                                                                    "var tokens = data.tokens || {};",
                                                                                    "var user = data.user || {};",
                                                                                    "pm.test(\"Response has access and refresh tokens\", function () {",
                                                                                    "    pm.expect(tokens).to.have.property('accessToken');",
                                                                                    "    pm.expect(tokens).to.have.property('refreshToken');",
                                                                                    "});",
                                                                                    "pm.test(\"Response has user object\", function () {",
                                                                                    "    pm.expect(user).to.have.property('id');",
                                                                                    "    pm.expect(user).to.have.property('email');",
                                                                                    "});",
                                                                                    "",
                                                                                    "// Guardar tokens y datos en entorno",
                                                                                    "if (pm.response.code === 200) {",
                                                                                    "    pm.environment.set(\"auth_token\", tokens.accessToken || \"\");",
                                                                                    "    pm.environment.set(\"refresh_token\", tokens.refreshToken || \"\");",
                                                                                    "    pm.environment.set(\"user_id\", user.id || \"\");",
                                                                                    "    pm.environment.set(\"company_id\", user.companyId || \"\");",
                                                                                    "}"
                                                                                ],
                                                                       "type":  "text/javascript"
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [
                                                                     {
                                                                         "key":  "Content-Type",
                                                                         "value":  "application/json"
                                                                     }
                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{\n  \"email\": \"admin@empresatest.com\",\n  \"password\": \"admin123\"\n}"
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{base_url}}/api/auth/login",
                                                                  "host":  [
                                                                               "{{base_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "api",
                                                                               "auth",
                                                                               "login"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "Get Current User",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.test(\"Status code is 200\", function () {",
                                                                                    "    pm.response.to.have.status(200);",
                                                                                    "});",
                                                                                    "",
                                                                                    "pm.test(\"Response has user data\", function () {",
                                                                                    "    var jsonData = pm.response.json();",
                                                                                    "    pm.expect(jsonData).to.have.property(\u0027user\u0027);",
                                                                                    "    pm.expect(jsonData.user).to.have.property(\u0027email\u0027);",
                                                                                    "});"
                                                                                ],
                                                                       "type":  "text/javascript"
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "GET",
                                                      "header":  [
                                                                     {
                                                                         "key":  "Authorization",
                                                                         "value":  "Bearer {{auth_token}}"
                                                                     }
                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{base_url}}/api/auth/me",
                                                                  "host":  [
                                                                               "{{base_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "api",
                                                                               "auth",
                                                                               "me"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "Logout",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.test(\"Status code is 200\", function () {",
                                                                                    "    pm.response.to.have.status(200);",
                                                                                    "});",
                                                                                    "",
                                                                                    "// Limpiar el token despuÃ©s del logout",
                                                                                    "pm.environment.unset(\"auth_token\");"
                                                                                ],
                                                                       "type":  "text/javascript"
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [
                                                                     {
                                                                         "key":  "Authorization",
                                                                         "value":  "Bearer {{auth_token}}"
                                                                     }
                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{base_url}}/api/auth/logout",
                                                                  "host":  [
                                                                               "{{base_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "api",
                                                                               "auth",
                                                                               "logout"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  }
                              ]
                 },
                 {
                     "name":  "ðŸ§¾ Invoices",
                     "item":  [
                                  {
                                      "name":  "Get All Invoices",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.test(\"Status code is 200\", function () {",
                                                                                    "    pm.response.to.have.status(200);",
                                                                                    "});",
                                                                                    "",
                                                                                    "pm.test(\"Response is an array\", function () {",
                                                                                    "    var jsonData = pm.response.json();",
                                                                                    "    pm.expect(jsonData).to.be.an(\u0027array\u0027);",
                                                                                    "});"
                                                                                ],
                                                                       "type":  "text/javascript"
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "GET",
                                                      "header":  [
                                                                     {
                                                                         "key":  "Authorization",
                                                                         "value":  "Bearer {{auth_token}}"
                                                                     }
                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{base_url}}/api/invoices",
                                                                  "host":  [
                                                                               "{{base_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "api",
                                                                               "invoices"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "Create Invoice",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.test(\"Status code is 201\", function () {",
                                                                                    "    pm.response.to.have.status(201);",
                                                                                    "});",
                                                                                    "",
                                                                                    "pm.test(\"Response has invoice data\", function () {",
                                                                                    "    var jsonData = pm.response.json();",
                                                                                    "    pm.expect(jsonData).to.have.property(\u0027id\u0027);",
                                                                                    "    pm.expect(jsonData).to.have.property(\u0027number\u0027);",
                                                                                    "});",
                                                                                    "",
                                                                                    "// Guardar el ID de la factura para otras pruebas",
                                                                                    "if (pm.response.code === 201) {",
                                                                                    "    var jsonData = pm.response.json();",
                                                                                    "    pm.environment.set(\"invoice_id\", jsonData.id);",
                                                                                    "}"
                                                                                ],
                                                                       "type":  "text/javascript"
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [
                                                                     {
                                                                         "key":  "Authorization",
                                                                         "value":  "Bearer {{auth_token}}"
                                                                     },
                                                                     {
                                                                         "key":  "Content-Type",
                                                                         "value":  "application/json"
                                                                     }
                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{\n  \"clientName\": \"Cliente Test S.A.\",\n  \"clientEmail\": \"cliente@test.com\",\n  \"clientTaxId\": \"20-87654321-0\",\n  \"clientAddress\": \"Av. Santa Fe 1234\",\n  \"items\": [\n    {\n      \"description\": \"Servicio de ConsultorÃ­a\",\n      \"quantity\": 10,\n      \"unitPrice\": 5000,\n      \"taxRate\": 21\n    },\n    {\n      \"description\": \"Desarrollo de Software\",\n      \"quantity\": 20,\n      \"unitPrice\": 8000,\n      \"taxRate\": 21\n    }\n  ],\n  \"notes\": \"Factura de prueba generada desde Postman\"\n}"
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{base_url}}/api/invoices",
                                                                  "host":  [
                                                                               "{{base_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "api",
                                                                               "invoices"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "Get Invoice by ID",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.test(\"Status code is 200\", function () {",
                                                                                    "    pm.response.to.have.status(200);",
                                                                                    "});",
                                                                                    "",
                                                                                    "pm.test(\"Response has invoice data\", function () {",
                                                                                    "    var jsonData = pm.response.json();",
                                                                                    "    pm.expect(jsonData).to.have.property(\u0027id\u0027);",
                                                                                    "    pm.expect(jsonData).to.have.property(\u0027number\u0027);",
                                                                                    "    pm.expect(jsonData).to.have.property(\u0027items\u0027);",
                                                                                    "});"
                                                                                ],
                                                                       "type":  "text/javascript"
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "GET",
                                                      "header":  [
                                                                     {
                                                                         "key":  "Authorization",
                                                                         "value":  "Bearer {{auth_token}}"
                                                                     }
                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{base_url}}/api/invoices/{{invoice_id}}",
                                                                  "host":  [
                                                                               "{{base_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "api",
                                                                               "invoices",
                                                                               "{{invoice_id}}"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "Update Invoice",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.test(\"Status code is 200\", function () {",
                                                                                    "    pm.response.to.have.status(200);",
                                                                                    "});",
                                                                                    "",
                                                                                    "pm.test(\"Response has updated data\", function () {",
                                                                                    "    var jsonData = pm.response.json();",
                                                                                    "    pm.expect(jsonData).to.have.property(\u0027id\u0027);",
                                                                                    "    pm.expect(jsonData.notes).to.include(\u0027ACTUALIZADA\u0027);",
                                                                                    "});"
                                                                                ],
                                                                       "type":  "text/javascript"
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "PUT",
                                                      "header":  [
                                                                     {
                                                                         "key":  "Authorization",
                                                                         "value":  "Bearer {{auth_token}}"
                                                                     },
                                                                     {
                                                                         "key":  "Content-Type",
                                                                         "value":  "application/json"
                                                                     }
                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{\n  \"clientName\": \"Cliente Test S.A. - ACTUALIZADO\",\n  \"clientEmail\": \"cliente@test.com\",\n  \"clientTaxId\": \"20-87654321-0\",\n  \"clientAddress\": \"Av. Santa Fe 1234 - Piso 5\",\n  \"items\": [\n    {\n      \"description\": \"Servicio de ConsultorÃ­a Premium\",\n      \"quantity\": 15,\n      \"unitPrice\": 6000,\n      \"taxRate\": 21\n    }\n  ],\n  \"notes\": \"Factura ACTUALIZADA desde Postman\"\n}"
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{base_url}}/api/invoices/{{invoice_id}}",
                                                                  "host":  [
                                                                               "{{base_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "api",
                                                                               "invoices",
                                                                               "{{invoice_id}}"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "Delete Invoice",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.test(\"Status code is 200\", function () {",
                                                                                    "    pm.response.to.have.status(200);",
                                                                                    "});",
                                                                                    "",
                                                                                    "pm.test(\"Response confirms deletion\", function () {",
                                                                                    "    var jsonData = pm.response.json();",
                                                                                    "    pm.expect(jsonData).to.have.property(\u0027message\u0027);",
                                                                                    "});"
                                                                                ],
                                                                       "type":  "text/javascript"
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "DELETE",
                                                      "header":  [
                                                                     {
                                                                         "key":  "Authorization",
                                                                         "value":  "Bearer {{auth_token}}"
                                                                     }
                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{base_url}}/api/invoices/{{invoice_id}}",
                                                                  "host":  [
                                                                               "{{base_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "api",
                                                                               "invoices",
                                                                               "{{invoice_id}}"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  }
                              ]
                 },
                 {
                     "name":  "ðŸ¢ Companies",
                     "item":  [
                                  {
                                      "name":  "Get Company Info",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.test(\"Status code is 200\", function () {",
                                                                                    "    pm.response.to.have.status(200);",
                                                                                    "});",
                                                                                    "",
                                                                                    "pm.test(\"Response has company data\", function () {",
                                                                                    "    var jsonData = pm.response.json();",
                                                                                    "    pm.expect(jsonData).to.have.property(\u0027name\u0027);",
                                                                                    "    pm.expect(jsonData).to.have.property(\u0027taxId\u0027);",
                                                                                    "});"
                                                                                ],
                                                                       "type":  "text/javascript"
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "GET",
                                                      "header":  [
                                                                     {
                                                                         "key":  "Authorization",
                                                                         "value":  "Bearer {{auth_token}}"
                                                                     }
                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{base_url}}/api/company",
                                                                  "host":  [
                                                                               "{{base_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "api",
                                                                               "company"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  }
                              ]
                 },
                 {
                     "name":  "âŒ Error Cases",
                     "item":  [
                                  {
                                      "name":  "Access Without Token",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.test(\"Status code is 401\", function () {",
                                                                                    "    pm.response.to.have.status(401);",
                                                                                    "});",
                                                                                    "",
                                                                                    "pm.test(\"Response has error message\", function () {",
                                                                                    "    var jsonData = pm.response.json();",
                                                                                    "    pm.expect(jsonData).to.have.property(\u0027error\u0027);",
                                                                                    "    pm.expect(jsonData.code).to.eql(\u0027MISSING_TOKEN\u0027);",
                                                                                    "});"
                                                                                ],
                                                                       "type":  "text/javascript"
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{base_url}}/api/invoices",
                                                                  "host":  [
                                                                               "{{base_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "api",
                                                                               "invoices"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "Invalid Login",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.test(\"Status code is 401\", function () {",
                                                                                    "    pm.response.to.have.status(401);",
                                                                                    "});",
                                                                                    "",
                                                                                    "pm.test(\"Response has error message\", function () {",
                                                                                    "    var jsonData = pm.response.json();",
                                                                                    "    pm.expect(jsonData).to.have.property(\u0027error\u0027);",
                                                                                    "    pm.expect(jsonData.code).to.eql(\u0027LOGIN_FAILED\u0027);",
                                                                                    "});"
                                                                                ],
                                                                       "type":  "text/javascript"
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [
                                                                     {
                                                                         "key":  "Content-Type",
                                                                         "value":  "application/json"
                                                                     }
                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{\n  \"email\": \"wrong@email.com\",\n  \"password\": \"wrongpassword\"\n}"
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{base_url}}/api/auth/login",
                                                                  "host":  [
                                                                               "{{base_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "api",
                                                                               "auth",
                                                                               "login"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  }
                              ]
                 },
                 {
                     "name":  "�� Sales",
                     "item":  [
                                  {
                                      "name":  "Create Sale",
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [
                                                                     { "key":  "Authorization", "value":  "Bearer {{auth_token}}" },
                                                                     { "key":  "Content-Type", "value":  "application/json" }
                                                                 ],
                                                      "body":  { "mode":  "raw", "raw":  "{\n  \"customerId\": \"{{customer_id}}\",\n  \"items\": [{ \"description\": \"Producto Demo\", \"quantity\": 1, \"unitPrice\": 1000, \"taxRate\": 21 }],\n  \"payments\": [{ \"method\": \"cash\", \"amount\": 1000 }]\n}" },
                                                      "url":  { "raw":  "{{base_url}}/api/sales", "host":  ["{{base_url}}"], "path":  ["api","sales"] }
                                                  },
                                      "event":  [ { "listen":  "test", "script":  { "type":  "text/javascript", "exec":  [
                                        "pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
                                        "var jsonData = pm.response.json(); pm.environment.set(\"sale_id\", (jsonData.data \u0026\u0026 jsonData.data.id) || \"\");"
                                      ] } } ]
                                  },
                                  {
                                      "name":  "Get Sale by ID",
                                      "request":  {
                                                      "method":  "GET",
                                                      "header":  [ { "key":  "Authorization", "value":  "Bearer {{auth_token}}" } ],
                                                      "url":  { "raw":  "{{base_url}}/api/sales/{{sale_id}}", "host":  ["{{base_url}}"], "path":  ["api","sales","{{sale_id}}"] }
                                                  },
                                      "event":  [ { "listen":  "test", "script":  { "type":  "text/javascript", "exec":  [
                                        "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                                        "var jsonData = pm.response.json(); pm.expect(jsonData.success).to.eql(true);"
                                      ] } } ]
                                  },
                                  {
                                      "name":  "Update Sale",
                                      "request":  {
                                                      "method":  "PUT",
                                                      "header":  [ { "key":  "Authorization", "value":  "Bearer {{auth_token}}" }, { "key":  "Content-Type", "value":  "application/json" } ],
                                                      "body":  { "mode":  "raw", "raw":  "{\n  \"notes\": \"Actualización de venta\"\n}" },
                                                      "url":  { "raw":  "{{base_url}}/api/sales/{{sale_id}}", "host":  ["{{base_url}}"], "path":  ["api","sales","{{sale_id}}"] }
                                                  }
                                  },
                                  {
                                      "name":  "Add Payments",
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [ { "key":  "Authorization", "value":  "Bearer {{auth_token}}" }, { "key":  "Content-Type", "value":  "application/json" } ],
                                                      "body":  { "mode":  "raw", "raw":  "{\n  \"payments\": [{ \"method\": \"cash\", \"amount\": 500 }]\n}" },
                                                      "url":  { "raw":  "{{base_url}}/api/sales/{{sale_id}}/payments", "host":  ["{{base_url}}"], "path":  ["api","sales","{{sale_id}}","payments"] }
                                                  }
                                  },
                                  {
                                      "name":  "List Payments",
                                      "request":  {
                                                      "method":  "GET",
                                                      "header":  [ { "key":  "Authorization", "value":  "Bearer {{auth_token}}" } ],
                                                      "url":  { "raw":  "{{base_url}}/api/sales/{{sale_id}}/payments", "host":  ["{{base_url}}"], "path":  ["api","sales","{{sale_id}}","payments"] }
                                                  }
                                  },
                                  {
                                      "name":  "Park Sale",
                                      "request":  { "method":  "POST", "header":  [ { "key":  "Authorization", "value":  "Bearer {{auth_token}}" } ], "url":  { "raw":  "{{base_url}}/api/sales/{{sale_id}}/park", "host":  ["{{base_url}}"], "path":  ["api","sales","{{sale_id}}","park"] } }
                                  },
                                  {
                                      "name":  "Resume Sale",
                                      "request":  { "method":  "POST", "header":  [ { "key":  "Authorization", "value":  "Bearer {{auth_token}}" } ], "url":  { "raw":  "{{base_url}}/api/sales/{{sale_id}}/resume", "host":  ["{{base_url}}"], "path":  ["api","sales","{{sale_id}}","resume"] } }
                                  },
                                  {
                                      "name":  "List Parked Sales",
                                      "request":  { "method":  "GET", "header":  [ { "key":  "Authorization", "value":  "Bearer {{auth_token}}" } ], "url":  { "raw":  "{{base_url}}/api/sales/parked?page=1&limit=10", "host":  ["{{base_url}}"], "path":  ["api","sales","parked"] } }
                                  }
                              ]
                 },
                 {
                     "name":  "Articles",
                     "item":  [
                                  { "name":  "List Articles", "request":  { "method":  "GET", "header":  [ { "key":  "Authorization", "value":  "Bearer {{auth_token}}" } ], "url":  { "raw":  "{{base_url}}/api/articles?page={{page}}&limit={{limit}}", "host":  ["{{base_url}}"], "path":  ["api","articles"] } } },
                                  { "name":  "Search Articles", "request":  { "method":  "GET", "header":  [ { "key":  "Authorization", "value":  "Bearer {{auth_token}}" } ], "url":  { "raw":  "{{base_url}}/api/articles?q={{query}}&page={{page}}&limit={{limit}}", "host":  ["{{base_url}}"], "path":  ["api","articles"] } } },
                                  { "name":  "Get Article by ID", "request":  { "method":  "GET", "header":  [ { "key":  "Authorization", "value":  "Bearer {{auth_token}}" } ], "url":  { "raw":  "{{base_url}}/api/articles/{{article_id}}", "host":  ["{{base_url}}"], "path":  ["api","articles","{{article_id}}"] } } },
                                  { "name":  "Get Article Stock", "request":  { "method":  "GET", "header":  [ { "key":  "Authorization", "value":  "Bearer {{auth_token}}" } ], "url":  { "raw":  "{{base_url}}/api/articles/{{article_id}}/stock", "host":  ["{{base_url}}"], "path":  ["api","articles","{{article_id}}","stock"] } } },
                                  { "name":  "Create Article", "request":  { "method":  "POST", "header":  [ { "key":  "Authorization", "value":  "Bearer {{auth_token}}" }, { "key":  "Content-Type", "value":  "application/json" } ], "body":  { "mode":  "raw", "raw":  "{\n  \"description\": \"Artículo demo\",\n  \"code\": \"A-001\",\n  \"price\": 1000,\n  \"taxRate\": 21\n}" }, "url":  { "raw":  "{{base_url}}/api/articles", "host":  ["{{base_url}}"], "path":  ["api","articles"] } } },
                                  { "name":  "Update Article", "request":  { "method":  "PUT", "header":  [ { "key":  "Authorization", "value":  "Bearer {{auth_token}}" }, { "key":  "Content-Type", "value":  "application/json" } ], "body":  { "mode":  "raw", "raw":  "{\n  \"price\": 1200\n}" }, "url":  { "raw":  "{{base_url}}/api/articles/{{article_id}}", "host":  ["{{base_url}}"], "path":  ["api","articles","{{article_id}}"] } } },
                                  { "name":  "Set Barcode", "request":  { "method":  "POST", "header":  [ { "key":  "Authorization", "value":  "Bearer {{auth_token}}" }, { "key":  "Content-Type", "value":  "application/json" } ], "body":  { "mode":  "raw", "raw":  "{\n  \"barcode\": \"{{barcode}}\"\n}" }, "url":  { "raw":  "{{base_url}}/api/articles/{{article_id}}/barcode", "host":  ["{{base_url}}"], "path":  ["api","articles","{{article_id}}","barcode"] } } }
                              ]
                 },
                 {
                     "name":  "Products (Legacy Alias)",
                     "item":  [
                                  { "name":  "List Products", "request":  { "method":  "GET", "header":  [ { "key":  "Authorization", "value":  "Bearer {{auth_token}}" } ], "url":  { "raw":  "{{base_url}}/api/products?page={{page}}&limit={{limit}}", "host":  ["{{base_url}}"], "path":  ["api","products"] } }, "event":  [ { "listen":  "test", "script":  { "type":  "text/javascript", "exec":  [
                                      "pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
                                      "pm.expect(pm.response.headers.get('Deprecation')).to.exist;"
                                  ] } } ] },
                                  { "name":  "Get Product by ID", "request":  { "method":  "GET", "header":  [ { "key":  "Authorization", "value":  "Bearer {{auth_token}}" } ], "url":  { "raw":  "{{base_url}}/api/products/{{product_id}}", "host":  ["{{base_url}}"], "path":  ["api","products","{{product_id}}"] } } }
                              ]
                 },
                 {
                     "name":  "Ops",
                     "item":  [
                                  { "name":  "Deprecation State", "request":  { "method":  "GET", "url":  { "raw":  "{{base_url}}/ops/deprecation-state", "host":  ["{{base_url}}"], "path":  ["ops","deprecation-state"] } }, "event":  [ { "listen":  "test", "script":  { "type":  "text/javascript", "exec":  [ "pm.response.to.have.status(200);" ] } } ] },
                                  { "name":  "Feature Flags", "request":  { "method":  "GET", "url":  { "raw":  "{{base_url}}/ops/feature-flags", "host":  ["{{base_url}}"], "path":  ["ops","feature-flags"] } } }
                              ]
                 }
             ],
    "event":  [
                  {
                      "listen":  "prerequest",
                      "script":  {
                                     "type":  "text/javascript",
                                     "exec":  [
                                                  ""
                                              ]
                                 }
                  },
                  {
                      "listen":  "test",
                      "script":  {
                                     "type":  "text/javascript",
                                     "exec":  [
                                                  ""
                                              ]
                                 }
                  }
              ],
    "variable":  [
                     {
                         "key":  "base_url",
                         "value":  "http://localhost:3002",
                         "type":  "string"
                     },
                     {
                         "key":  "auth_token",
                         "value":  "",
                         "type":  "string"
                     },
                     {
                         "key":  "invoice_id",
                         "value":  "",
                         "type":  "string"
                     },
                     {
                         "key":  "sale_id",
                         "type":  "string",
                         "value":  ""
                     },
                     {
                         "key":  "customer_id",
                         "type":  "string",
                         "value":  ""
                     }
                 ]
}
